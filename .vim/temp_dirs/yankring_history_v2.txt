,V
#,v
BACKUP_DIR = '/Users/lvyaojia/douban/staticng/permdir',V
            tags = {'app':project},V
            tags = {'app':project'},V
            capture_exception(),V
extra = {'app':project, 'reversion': revision, 'path':path}            capture_exception(extra=extra),v
_,v
user,v
92dd4dc,v
            print '%s Register Delay! Count: %d' % (path,,V
        print url, 2222222222,V
    print url,11111111,V
    path = path.lstrip('/'),V
    print url_backup_content, 111111111111111109929292,V
    print project, path, revision,V
mfs,v
BACKUP_DIR = '/mfs/user/staticng',v
    return istatic_handler(path),V
def istatic(path):,V
,V
    return static_handler(path),V
def static(path):,V
_handler,v
config ,v
com,v
.,v
douban,v
dapps,v
staticng,v
STATIC_SERVER = 'http://staticng.dapps.douban.com/',V
            pass,V
e,v
, ,v
orm ,v
capture_exception,v
?,v
project,v
    else:,V
global ,v
rom ,v
f,v
  262,V
 262,V
Fixme,v
 ,v
:,v
ï¼Œ,v
path,v
os,v
    print os.path.islink(link),V
        print 11111111,V
op.exists(link):,V
os.path.islink(link),v
    print op.exists(link),V
    print link,V
project_dir, 'static')),v
(,v
join,v
op,v
        revision_dir = '%s/%s/%s' % (config.BACKUP_DIR, 'shire1', 'v1'),V
        self.assertEqual(os.readlink(link), revision_dir),V
link = '%s/%s/%s' % (config.BACKUP_DIR, 'shire1', 'static')        revision_dir = '%s/%s/%s' % (config.BACKUP_DIR, 'shire1', 'v1'),v
        cj.backup_file_urls('shire1', files),V
        files = sn.get_files_by_project_revision('shire1', 'v1'),V
        cj.update_project_files('shire1'),V
        link = '%s/%s/%s' % (config.BACKUP_DIR, 'shire1', 'static'),V
        time.sleep(1)        sn.register_file('shire1', '/test.css', 'testing2', 'v2')        sn.register_file('shire1', '/test.js', 'testing2', 'v2')        cj.update_project_files('shire1') ,v
files = sn.get_files_by_project_revision('shire1', 'v1')        cj.backup_file_urls('shire1', files),v
unlink,v
    def test_cron_should_update,V
static,v
os.listdir(project_dir).remove('static')[0],v
                os.listdir(project_dir),V
            if 'static' in os.listdir(project_dir):,V
        if os.listdir(project_dir):,V
            dirs = dirs.remove('static') if 'static' in dirs,V
os.listdir(project_dir),v
        cj.get_project_dir + '/static'),V
h,v
link ,v
        link = '%s/%s/static' % (config.BACKUP_DIR, 'shire1'),V
,,v
',v
v1,v
revision_dir ,v
        p,V
s,v
o,v
        files = sn.get_files_by_project_revision('shire1', 'v1')        cj.backup_file_urls('shire1', files),V
        create_symbolic_link(project, latest_revision),V
link_name,v
'':,v
== ,v
'',v
            print ,V
permdir,v
(x, y, z) for x in S for y in S for z in S if x+y+z == 0 ],v
remov,v
],v
